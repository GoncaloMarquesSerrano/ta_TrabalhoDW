@model IEnumerable<Ludix.Models.Game>

@{
    ViewData["Title"] = "Todos os Jogos";
}

<style>
    :root {
        --primary-dark: #0a192f;
        --secondary-dark: #172a45;
        --accent-gold: #FFD700;
        --text-light: #e6f1ff;
        --hover-gold: #ffd900cc;
        --card-bg: #1e2a3a;
        --border-color: rgba(255, 215, 0, 0.2);
    }

    .page-header {
        background: linear-gradient(135deg, var(--secondary-dark), var(--primary-dark));
        padding: 2rem 0;
        margin-bottom: 2rem;
        border-radius: 10px;
        border: 1px solid var(--border-color);
    }

    .page-title {
        color: var(--accent-gold);
        font-size: 2.5rem;
        font-weight: 700;
        text-align: center;
        margin: 0;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
    }

    .games-list {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        padding: 1rem 0;
    }

    .game-item {
        background: var(--card-bg);
        border: 1px solid var(--border-color);
        border-radius: 10px;
        padding: 1.5rem;
        transition: all 0.3s ease;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
    }

        .game-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 20px rgba(255, 215, 0, 0.2);
            border-color: var(--accent-gold);
        }

    .game-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 1rem;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .game-title-section {
        flex: 1;
        min-width: 200px;
    }

    .game-title {
        color: var(--accent-gold);
        font-size: 1.5rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        text-decoration: none;
        display: block;
    }

        .game-title:hover {
            color: var(--hover-gold);
            text-shadow: 0 0 8px var(--hover-gold);
        }

    .game-price {
        color: var(--accent-gold);
        font-size: 1.3rem;
        font-weight: 600;
        white-space: nowrap;
    }

    .game-details {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
        margin-bottom: 1rem;
    }

    .game-detail-item {
        color: var(--text-light);
        font-size: 0.9rem;
    }

    .game-detail-label {
        font-weight: 600;
        color: var(--accent-gold);
        margin-right: 0.5rem;
    }

    .game-genres {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-bottom: 1rem;
    }

    .genre-tag {
        background: rgba(255, 215, 0, 0.1);
        color: var(--accent-gold);
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.8rem;
        border: 1px solid rgba(255, 215, 0, 0.3);
    }

    .game-actions {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
        justify-content: flex-end;
    }

    .btn-primary {
        background: linear-gradient(135deg, var(--accent-gold), #ffed4e);
        border: none;
        color: var(--primary-dark);
        font-weight: 600;
        padding: 0.5rem 1rem;
        border-radius: 25px;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-block;
        font-size: 0.9rem;
    }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(255, 215, 0, 0.4);
            color: var(--primary-dark);
        }

    .btn-outline-primary {
        background: transparent;
        border: 2px solid var(--accent-gold);
        color: var(--accent-gold);
        font-weight: 600;
        padding: 0.5rem 1rem;
        border-radius: 25px;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-block;
        font-size: 0.9rem;
    }

        .btn-outline-primary:hover {
            background: var(--accent-gold);
            color: var(--primary-dark);
            transform: translateY(-2px);
        }

    .no-games {
        text-align: center;
        color: var(--text-light);
        font-size: 1.2rem;
        padding: 3rem 0;
        opacity: 0.7;
    }

    .search-section {
        background: var(--card-bg);
        border: 1px solid var(--border-color);
        border-radius: 10px;
        padding: 1.5rem;
        margin-bottom: 2rem;
    }

    .search-input {
        background: var(--primary-dark);
        border: 1px solid var(--border-color);
        color: var(--text-light);
        border-radius: 25px;
        padding: 0.75rem 1.5rem;
        width: 100%;
        font-size: 1rem;
    }

        .search-input:focus {
            outline: none;
            border-color: var(--accent-gold);
            box-shadow: 0 0 10px rgba(255, 215, 0, 0.3);
            color: var(--text-light);
        }

        .search-input::placeholder {
            color: rgba(230, 241, 255, 0.5);
        }

    .games-count {
        color: var(--text-light);
        font-size: 1rem;
        margin-bottom: 1rem;
        opacity: 0.8;
    }
</style>

<div class="page-header">
    <h1 class="page-title">Todos os Jogos</h1>
</div>

<!-- Seção de Pesquisa -->
<div class="search-section">
    <input type="text" class="search-input" id="gameSearch" placeholder="🔍 Pesquisar jogos por título, desenvolvedor ou género...">
</div>

@if (Model.Any())
{
    <div class="games-count">
        <strong>@Model.Count()</strong> jogos encontrados
    </div>

    <div class="games-list" id="gamesList">
        @foreach (var game in Model)
        {
            <div class="game-item" data-game-info="@game.Title.ToLower() @game.Developer?.Website?.ToLower() @string.Join(" ", game.Genres?.Select(g => g.GenreName?.ToLower()) ?? new string[0])">

                <div class="game-header">
                    <div class="game-title-section">
                        <a asp-action="Details" asp-route-id="@game.GameId" class="game-title">
                            @game.Title
                        </a>
                    </div>
                    <div class="game-price">
                        @game.Price.ToString("C", new System.Globalization.CultureInfo("pt-PT"))
                    </div>
                </div>

                <div class="game-details">
                    <div class="game-detail-item">
                        <span class="game-detail-label">Desenvolvedor:</span>
                        @(game.Developer?.Website ?? "N/A")
                    </div>

                    <div class="game-detail-item">
                        <span class="game-detail-label">Lançamento:</span>
                        @game.ReleaseDate.ToString("dd/MM/yyyy")
                    </div>
                </div>

                @if (game.Genres != null && game.Genres.Any())
                {
                    <div class="game-genres">
                        @foreach (var genre in game.Genres)
                        {
                            <span class="genre-tag">@genre.GenreName</span>
                        }
                    </div>
                }

                <div class="game-actions">
                    <a asp-action="Details" asp-route-id="@game.GameId" class="btn btn-primary">
                        Ver Detalhes
                    </a>

                    @if (User.Identity.IsAuthenticated)
                    {
                        <a href="#" class="btn btn-outline-primary" onclick="addToWishlist(@game.GameId)">
                            ❤️ Wishlist
                        </a>
                    }
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="no-games">
        <p>Não foram encontrados jogos na base de dados.</p>
        @if (User.IsInRole("Developer") || User.IsInRole("Admin"))
        {
            <a asp-action="Create" class="btn btn-primary mt-3">Adicionar Primeiro Jogo</a>
        }
    </div>
}

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('gameSearch');
        const gamesList = document.getElementById('gamesList');
        const gameItems = document.querySelectorAll('.game-item');
        const gamesCount = document.querySelector('.games-count');

        // Função de pesquisa
        searchInput.addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase().trim();
            let visibleCount = 0;

            gameItems.forEach(item => {
                const gameInfo = item.getAttribute('data-game-info');

                if (gameInfo.includes(searchTerm)) {
                    item.style.display = 'block';
                    visibleCount++;
                } else {
                    item.style.display = 'none';
                }
            });

            // Atualizar contador
            if (gamesCount) {
                gamesCount.innerHTML = `<strong>${visibleCount}</strong> jogos encontrados`;
            }
        });
    });

    // Função para adicionar à wishlist (placeholder)
    function addToWishlist(gameId) {
        // Aqui você implementaria a lógica para adicionar à wishlist
        alert(`Jogo ${gameId} adicionado à wishlist! (Funcionalidade a implementar)`);
    }
</script>