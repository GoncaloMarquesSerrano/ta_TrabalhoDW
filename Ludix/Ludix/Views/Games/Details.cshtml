@model Ludix.Models.Game
@{
    ViewData["Title"] = "Details";
    
    var currentUserId = ViewContext.HttpContext.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
    
    
    // Verificar se é desenvolvedor ou admin
    bool isDeveloper = Model.Developer?.AspUser == currentUserId;
    bool isAdmin = ViewBag.IsAdmin != null ? (bool)ViewBag.IsAdmin : false;
    bool canManageGame = isDeveloper || isAdmin;
    
}

<div class="container mt-4">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-triangle"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="row">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h2>@Model.Title</h2>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <img src="~/covers/@Model.Cover" alt="@Model.Title Cover" class="img-fluid rounded" style="max-width: 100%; height: auto;" />
                        </div>
                        <div class="col-md-8">
                            <dl class="row">
                                <dt class="col-sm-4">Preço:</dt>
                                <dd class="col-sm-8">
                                    <strong class="text-success fs-4">@Model.Price.ToString("C")</strong>
                                </dd>
                                
                                <dt class="col-sm-4">Data de Lançamento:</dt>
                                <dd class="col-sm-8">@Model.ReleaseDate.ToString("dd/MM/yyyy")</dd>
                                
                                <dt class="col-sm-4">Desenvolvedor:</dt>
                                <dd class="col-sm-8">@(Model.Developer?.Username ?? "N/A")</dd>
                                
                                <dt class="col-sm-4">Géneros:</dt>
                                <dd class="col-sm-8">
                                    @if (Model.Genres != null && Model.Genres.Any())
                                    {
                                        <div class="d-flex flex-wrap">
                                            @foreach (var genre in Model.Genres)
                                            {
                                                <span class="badge bg-secondary me-1 mb-1">@genre.GenreName</span>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Nenhum género associado</span>
                                    }
                                </dd>
                            </dl>
                        </div>
                    </div>
                    
                    @if (!string.IsNullOrEmpty(Model.Description))
                    {
                        <div class="mt-3">
                            <h5>Descrição</h5>
                            <p class="text-muted">@Model.Description</p>
                        </div>
                    }
                </div>
            </div>

            <!-- Seção de Avaliações -->
            <div class="card mt-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="mb-0">Avaliações</h4>
                    @if (Model.Reviews != null && Model.Reviews.Any())
                    {
                        <div class="text-end">
                            <span class="badge bg-primary">@Model.Reviews.Count() avaliações</span>
                            <span class="badge bg-warning text-dark">
                                @Math.Round(Model.Reviews.Average(r => r.Rating), 1)/5 ★
                            </span>
                        </div>
                    }
                </div>
                <div class="card-body">
                    @if (User.Identity.IsAuthenticated )
                    {
                        @* Verificar se o utilizador ja fez review para este jogo *@
                        var userReview = Model.Reviews?.FirstOrDefault(r => r.MyUser?.AspUser == currentUserId);
                        @if (userReview == null)
                        {
                            <!-- Formulario para criar nova review -->
                            <div class="card border-primary mb-4">
                                <div class="card-header bg-primary text-white">
                                    <h6 class="mb-0"><i class="fas fa-star"></i> Avaliar este jogo</h6>
                                </div>
                                <div class="card-body">
                                    <form asp-controller="Reviews" asp-action="Create" method="post">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="GameId" value="@Model.GameId" />

                                        <div class="mb-3">
                                            <label for="Rating" class="form-label">Classificação *</label>
                                            <div class="rating-input">
                                                <div class="btn-group" role="group" aria-label="Rating">
                                                    @for (int i = 1; i <= 5; i++)
                                                    {
                                                        <input type="radio" class="btn-check" name="Rating" id="rating@(i)" value="@i" required>
                                                        <label class="btn btn-outline-warning" for="rating@(i)">
                                                            @i <i class="fas fa-star"></i>
                                                        </label>
                                                    }
                                                </div>
                                            </div>
                                            <small class="form-text text-muted">Selecione uma classificação de 1 a 5 estrelas</small>
                                        </div>

                                        <div class="mb-3">
                                            <label for="ReviewText" class="form-label">Comentário (opcional)</label>
                                            <textarea class="form-control" name="ReviewText" id="ReviewText" 
                                                      rows="4" placeholder="Partilhe a sua opinião sobre este jogo..." maxlength="500"></textarea>
                                            <small class="form-text text-muted">Máximo 500 caracteres</small>
                                        </div>

                                        <div class="d-flex justify-content-between">
                                            <button type="submit" class="btn btn-primary">
                                                <i class="fas fa-paper-plane"></i> Publicar Avaliação
                                            </button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        }
                        else
                        {
                            <!-- Mostrar que o utilizador ja fez review -->
                            <div class="alert alert-info mb-4">
                                <i class="fas fa-info-circle"></i>
                                Já avaliou este jogo. Pode <a href="@Url.Action("Edit", "Reviews", new { id = userReview.ReviewId })" class="alert-link">editar a sua avaliação</a> se desejar.
                            </div>
                        }
                    }
                    else
                    {
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle"></i>
                            <p>Faça login para avaliar este jogo.</p>
                        </div>
                    }

                    @if (Model.Reviews != null && Model.Reviews.Any())
                    {
                        <!-- Lista de Reviews -->
                        <div class="reviews-list">
                            @foreach (var review in Model.Reviews.OrderByDescending(r => r.ReviewDate))
                            {
                                <div class="card mb-3 border-light">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between align-items-start mb-2">
                                            <div>
                                                <h6 class="card-title mb-1">
                                                    @(review.MyUser?.Username ?? "Utilizador Anónimo")
                                                    <span class="badge bg-success ms-2">Verificado</span>
                                                </h6>
                                                <div class="rating mb-2">
                                                    @for (int i = 1; i <= 5; i++)
                                                    {
                                                        if (i <= review.Rating)
                                                        {
                                                            <span class="text-warning">★</span>
                                                        }
                                                        else
                                                        {
                                                            <span class="text-muted">☆</span>
                                                        }
                                                    }
                                                    <span class="ms-2 text-muted">(@review.Rating/5)</span>
                                                </div>
                                            </div>
                                            <small class="text-muted">@review.ReviewDate.ToString("dd/MM/yyyy HH:mm")</small>
                                        </div>
                                        
                                        @if (!string.IsNullOrEmpty(review.ReviewText))
                                        {
                                            <p class="card-text">@review.ReviewText</p>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center text-muted py-4">
                            <i class="fas fa-star-o fa-3x mb-3"></i>
                            <p>Este jogo ainda não tem avaliações.</p>
                            @if (User.Identity.IsAuthenticated)
                            {
                                <p>Seja o primeiro a avaliar!</p>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Sidebar com ações -->
        <div class="col-lg-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-gamepad"></i> Ações do Jogo
                    </h5>
                </div>
                <div class="card-body">
                    @if (User.Identity.IsAuthenticated)
                    {
                            <!-- Utilizador não possui o jogo -->
                            <div class="mb-3">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <span>Preço:</span>
                                    <strong class="text-success fs-4">@Model.Price.ToString("C")</strong>
                                </div>
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                </div>
                            </div>
                                <form asp-controller="Purchases" asp-action="Buy" asp-route-id="@Model.GameId" method="post">
                                    <button type="submit" class="btn btn-success">Comprar por @Model.Price.ToString("C")</button>
                                </form>
                    }
                    else
                    {
                        <!-- Utilizador não autenticado -->
                        <div class="text-center mb-3">
                            <i class="fas fa-user-lock fa-3x text-muted mb-3"></i>
                            <h6>Faça login para comprar</h6>
                        </div>
                    }

                    @if (canManageGame)
                    {
                        <!-- Ações de gestão para desenvolvedor/admin -->
                        <hr>
                        <h6 class="text-muted">
                            <i class="fas fa-cog"></i> Gestão
                            @if (isDeveloper)
                            {
                                <span class="badge bg-info ms-1">Desenvolvedor</span>
                            }
                            @if (isAdmin)
                            {
                                <span class="badge bg-danger ms-1">Admin</span>
                            }
                        </h6>
                        <div class="d-grid gap-1">
                            <a href="@Url.Action("Edit", "Games", new { id = Model.GameId })" class="btn btn-outline-warning btn-sm">
                                <i class="fas fa-edit"></i> Editar Jogo
                            </a>
                            
                            @if (isAdmin)
                            {
                                <a href="@Url.Action("Index", "Purchase")" class="btn btn-outline-info btn-sm">
                                    <i class="fas fa-chart-line"></i> Ver Vendas
                                </a>
                                <a href="@Url.Action("Delete", "Games", new { id = Model.GameId })" class="btn btn-outline-danger btn-sm">
                                    <i class="fas fa-trash"></i> Eliminar Jogo
                                </a>
                            }
                        </div>
                    }
                </div>
            </div>

            <!-- Card com estatísticas do jogo -->
            <div class="card mt-3">
                <div class="card-header">
                    <h6 class="mb-0">
                        <i class="fas fa-chart-bar"></i> Estatísticas
                    </h6>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-6">
                            <div class="border-end">
                                <h5 class="text-primary mb-0">@(Model.Purchases?.Count() ?? 0)</h5>
                                <small class="text-muted">Vendas</small>
                            </div>
                        </div>
                        <div class="col-6">
                            <h5 class="text-warning mb-0">
                                @if (Model.Reviews != null && Model.Reviews.Any())
                                {
                                    @Math.Round(Model.Reviews.Average(r => r.Rating), 1)
                                }
                                else
                                {
                                    <span class="text-muted">N/A</span>
                                }
                            </h5>
                            <small class="text-muted">Avaliação</small>
                        </div>
                    </div>
                    <hr>
                    <div class="text-center">
                        <small class="text-muted">
                            Lançado em @Model.ReleaseDate.ToString("MMMM yyyy")
                        </small>
                    </div>
                </div>
            </div>

            <!-- Card de desenvolvedor -->
            @if (Model.Developer != null)
            {
                <div class="card mt-3">
                    <div class="card-header">
                        <h6 class="mb-0">
                            <i class="fas fa-user-tie"></i> Desenvolvedor
                        </h6>
                    </div>
                    <div class="card-body text-center">
                        <h6>@Model.Developer.Username</h6>
                        <a href="@Url.Action("DeveloperGames", "Games", new { developerId = Model.Developer.UserId })" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-gamepad"></i> Ver mais jogos
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Botão de voltar -->
    <div class="row mt-4">
        <div class="col-12">
            <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> Voltar à Home
            </a>
        </div>
    </div>
</div>