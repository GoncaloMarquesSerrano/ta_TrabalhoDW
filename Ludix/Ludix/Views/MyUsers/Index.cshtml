@model Ludix.Models.MyUser
@{
    ViewData["Title"] = "Minha Carteira";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h3><i class="fas fa-wallet"></i> Minha Carteira</h3>
                    <span class="badge bg-success fs-5">@Model.Balance.ToString("C")</span>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="card bg-light">
                                <div class="card-body text-center">
                                    <h5 class="card-title">Saldo Atual</h5>
                                    <h2 class="text-success">@Model.Balance.ToString("C")</h2>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card bg-light">
                                <div class="card-body text-center">
                                    <h5 class="card-title">Jogos Comprados</h5>
                                    <h2 class="text-primary">@Model.Purchases.Count()</h2>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Histórico de Compras -->
            <div class="card mt-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4><i class="fas fa-history"></i> Histórico de Compras</h4>
                    <a asp-action="Library" class="btn btn-primary btn-sm">
                        <i class="fas fa-gamepad"></i> Ver Biblioteca
                    </a>
                </div>
                <div class="card-body">
                    @if (Model.Purchases != null && Model.Purchases.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Jogo</th>
                                        <th>Data</th>
                                        <th>Preço Pago</th>
                                        <th>Ações</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var purchase in Model.Purchases.OrderByDescending(p => p.PurchaseDate).Take(10))
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    @if (!string.IsNullOrEmpty(purchase.Game.Cover))
                                                    {
                                                        <img src="~/covers/@purchase.Game.Cover" alt="@purchase.Game.Title"
                                                             class="me-2 rounded" style="width: 40px; height: 40px; object-fit: cover;">
                                                    }
                                                    <div>
                                                        <strong>@purchase.Game.Title</strong>
                                                        <br>
                                                        <small class="text-muted">@purchase.Game.Developer?.ProposedWebsite</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>@purchase.PurchaseDate.ToString("dd/MM/yyyy")</td>
                                            <td><span class="badge bg-success">@purchase.PricePaid.ToString("C")</span></td>
                                            <td>
                                                <a asp-controller="Games" asp-action="Details" asp-route-id="@purchase.Game.GameId"
                                                   class="btn btn-sm btn-outline-primary">
                                                    <i class="fas fa-eye"></i> Ver
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        @if (Model.Purchases.Count() > 10)
                        {
                            <div class="text-center mt-3">
                                <a asp-action="Library" class="btn btn-outline-primary">
                                    Ver todas as compras (@Model.Purchases.Count())
                                </a>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-shopping-cart fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">Ainda não fez nenhuma compra</h5>
                            <p class="text-muted">Explore nossa loja e encontre jogos incríveis!</p>
                            <a asp-controller="Home" asp-action="Index" class="btn btn-primary">
                                <i class="fas fa-store"></i> Ir para a Loja
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <div class="card">
                <div class="card-header">
                    <h5><i class="fas fa-plus-circle"></i> Adicionar Fundos</h5>
                </div>
                <div class="card-body">
                    <p class="text-muted">Adicione fundos à sua carteira para comprar jogos.</p>
                    <a asp-action="AddFunds" class="btn btn-success btn-block">
                        <i class="fas fa-credit-card"></i> Adicionar Fundos
                    </a>
                </div>
            </div>

            <div class="card mt-3">
                <div class="card-header">
                    <h6><i class="fas fa-info-circle"></i> Informações da Conta</h6>
                </div>
                <div class="card-body">
                    <dl class="row mb-0">
                        <dt class="col-sm-6">Utilizador:</dt>
                        <dd class="col-sm-6">@Model.Username</dd>

                        <dt class="col-sm-6">Email:</dt>
                        <dd class="col-sm-6"><small>@Model.Email</small></dd>

                        <dt class="col-sm-6">Membro desde:</dt>
                        <dd class="col-sm-6"><small>@Model.CreatedAt.ToString("MM/yyyy")</small></dd>

                        <dt class="col-sm-6">Total gasto:</dt>
                        <dd class="col-sm-6">
                            <span class="badge bg-info">
                                @(Model.Purchases?.Sum(p => p.PricePaid).ToString("C") ?? "0,00€")
                            </span>
                        </dd>
                    </dl>
                </div>
            </div>

            <!-- Estatísticas -->
            @if (Model.Purchases != null && Model.Purchases.Any())
            {
                <div class="card mt-3">
                    <div class="card-header">
                        <h6><i class="fas fa-chart-bar"></i> Estatísticas</h6>
                    </div>
                    <div class="card-body">
                        @{
                            var genreStats = Model.Purchases
                            .SelectMany(p => p.Game.Genres)
                            .GroupBy(g => g.GenreName)
                            .OrderByDescending(g => g.Count())
                            .Take(5);
                        }

                        <h6>Géneros Favoritos:</h6>
                        @foreach (var genre in genreStats)
                        {
                            <div class="d-flex justify-content-between align-items-center mb-1">
                                <span class="badge bg-secondary">@genre.Key</span>
                                <small class="text-muted">@genre.Count() jogos</small>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header bg-success text-white">
                <i class="fas fa-check-circle me-2"></i>
                <strong class="me-auto">Sucesso</strong>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast"></button>
            </div>
            <div class="toast-body">
                @TempData["SuccessMessage"]
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Auto-hide toasts after 5 seconds
            const toasts = document.querySelectorAll('.toast');
            toasts.forEach(toast => {
                setTimeout(() => {
                    const bsToast = new bootstrap.Toast(toast);
                    bsToast.hide();
                }, 5000);
            });
        });
    </script>
}