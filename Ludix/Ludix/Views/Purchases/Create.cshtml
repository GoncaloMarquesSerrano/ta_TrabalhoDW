@model Purchase

@{
    ViewData["Title"] = "Finalizar Compra";
    var game = ViewBag.Game as Game;
    var user = ViewBag.User as MyUser;
}

<h2>Finalizar Compra</h2>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h4>Detalhes da Compra</h4>
            </div>
            <div class="card-body">
                <!-- Informações do Jogo (Somente Leitura) -->
                <div class="form-group">
                    <label><strong>Jogo:</strong></label>
                    <p>@game?.Name</p>
                </div>

                <div class="form-group">
                    <label><strong>Preço:</strong></label>
                    <p class="text-success">€@game?.Price.ToString("F2")</p>
                </div>

                <!-- Informações do Usuário (Somente Leitura) -->
                <div class="form-group">
                    <label><strong>Comprador:</strong></label>
                    <p>@user?.Username</p>
                </div>

                <div class="form-group">
                    <label><strong>Saldo Atual:</strong></label>
                    <p class="@(user?.Balance >= game?.Price ? "text-success" : "text-danger")">
                        €@user?.Balance.ToString("F2")
                    </p>
                </div>

                <div class="form-group">
                    <label><strong>Saldo Após Compra:</strong></label>
                    <p class="text-info">€@((user?.Balance - game?.Price)?.ToString("F2"))</p>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h4>Método de Pagamento</h4>
            </div>
            <div class="card-body">
                <form asp-action="Create" method="post">
                    @Html.AntiForgeryToken()
                    
                    <!-- Campos ocultos com os valores pré-definidos -->
                    <input type="hidden" asp-for="GameId" value="@Model.GameId" />
                    <input type="hidden" asp-for="UserId" value="@Model.UserId" />
                    <input type="hidden" asp-for="PricePaid" value="@Model.PricePaid" />

                    <div class="form-group">
                        <label asp-for="PaymentMethod" class="control-label">Método de Pagamento</label>
                        <select asp-for="PaymentMethod" class="form-control" asp-items="ViewBag.PaymentMethods">
                            <option value="">-- Selecione --</option>
                        </select>
                        <span asp-validation-for="PaymentMethod" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <input type="submit" value="Confirmar Compra" class="btn btn-success btn-block" />
                    </div>
                </form>

                <div class="mt-3">
                    <a href="@Url.Action("Details", "Games", new { id = Model.GameId })" class="btn btn-secondary btn-block">
                        Cancelar
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@if (ViewData.ModelState.ErrorCount > 0)
{
    <div class="alert alert-danger mt-3">
        <ul class="mb-0">
            @foreach (var error in ViewData.ModelState.SelectMany(x => x.Value.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
message.txt
4 KB